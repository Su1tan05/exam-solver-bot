import typing as t
from telebot.types import Message
from telebot.async_telebot import AsyncTeleBot
from states.user_information import UserInformation
import pathlib

class MessageHandler:
    def __init__(self, bot: AsyncTeleBot):
        self.bot = bot

    async def start_handler(self, message: Message):
        await self.bot.send_message(message.from_user.id, f'–ü—Ä–∏–≤–µ—Ç üñê, {message.from_user.first_name}, '
                                           f'<b>\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É—Å–ø–µ—à–Ω–æ —Å–¥–∞—Ç—å —ç–∫–∑!</b>', parse_mode='html')
        await self.bot.send_message(message.from_user.id, '<b>–ò –≤–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n'
                                           '/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n'
                                           '\n'
                                           '/shpora ‚Äî –ø–æ–ª—É—á–µ–Ω–∏–µ —à–ø–æ—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf\n'
                                           '\n'
                                           '/solver ‚Äî —Ä–∞—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏\n'
                                           '\n'
                                           '/github ‚Äî —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π –≥–∏—Ç—Ö–∞–± —Ä–µ–ø–æ–∑ —Å –∫–æ–¥–æ–º –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ üòù</b>', parse_mode='html')

    async def help_handler(self, message: Message):
        pass

    async def send_pdf(self, message: Message):
        pdf_file_path =  pathlib.Path(__package__).parent.absolute().joinpath('resources', 'Shpora.pdf')
        with open(pdf_file_path, 'rb') as pdf:
            await self.bot.send_document(message.chat.id, pdf)

    async def task_init_message(self, message: Message):
        await self.bot.send_message(message.chat.id, \
            "–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏: \n1. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–æ—â–Ω–æ—Å—Ç–∏ –¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–∏–µ–º–Ω–∏–∫–æ–≤")
        await self.bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≠–ü1 (—Å–ª–∏—Ç–Ω–æ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–º ';')\n\
            –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 24.0;4;0.82;0.82;6.5")
        await self.bot.set_state(message.from_user.id, UserInformation.first_source_params, message.chat.id)
    
    async def set_first_source_params(self, message: Message):
        async with self.bot.retrieve_data(message.from_user.id) as data:
            data['name'] = message.text
        return await self.bot.send_message(message.chat.id, f"–í—ã –≤–≤–µ–ª–∏: {data['name']}")

    async def send_github_link(self, message: Message):
        await self.bot.send_message(message.chat.id, "https://github.com/Su1tan05/exam_bot")